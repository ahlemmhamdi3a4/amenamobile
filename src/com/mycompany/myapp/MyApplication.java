/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.myapp;

/**
 *
 * @author aymen
 */
import amena.entities.Competition;

import amena.gui.DeleteCompForm;

import amena.gui.BaseForm;
import com.codename1.components.ImageViewer;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.layouts.BorderLayout;

import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import java.util.ArrayList;
import java.util.List;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current, f2, hi;
    private Resources theme;
    private Label ltitle, ldate_deb, ldate_fin, lnbp, ltype;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
     /*   if (current != null) {
            current.show();
            return;
        }
        hi = new Form("Competition", BoxLayout.y());
        f2 = new Form("Details", BoxLayout.y());

        ltitle = new Label();
        ldate_deb = new Label();
        ldate_fin = new Label();
        lnbp = new Label();
        ltype = new Label();
        f2.addAll(ltitle, ldate_deb, lnbp, ltype);

        ServiceCompetition sc = new ServiceCompetition();

        ArrayList<Competition> list = sc.affichageCompetition();

        for (Competition c : list) {
            
            hi.add(addItem(c));
Button btnDeleteComp = new Button("Delete Competition");
            btnDeleteComp.addActionListener((e) -> {
                DeleteCompForm deleteForm = new DeleteCompForm(c.getId(), current);
                deleteForm.show();
            });
        }
        Button ajoutcomp = new Button("Ajouter une compÃ©tition");
        ajoutcomp.addActionListener(e -> {
            // Rediriger l'utilisateur vers l'interface d'ajout
            new AddCompetitionForm().show();
        });
        hi.add(ajoutcomp);
        hi.show();
    }

    public Container addItem(Competition c) {
        Label labn = new Label(c.getTitle());
        Button btn = new Button(c.getTitle());
        Button btnDeleteComp = new Button("Delete Competition");
        //  Label lbimg = new Label(theme.getImage(c.getTitle()));

        Container cn1 = new Container(BoxLayout.y());
        cn1.addAll(labn, btn,btnDeleteComp);

//        Container cn2=new Container(BoxLayout.x());
//        cn2.addAll(cn1,lbimg);
        Container cn2 = new Container(new BorderLayout());
        cn2.add(BorderLayout.WEST, cn1);
        // cn2.add(BorderLayout.EAST, lbimg);
        btn.addActionListener(l -> {
            //   imgv.setImage(theme.getImage(c.getTitle()));
            ltitle.setText("titreA : " + c.getTitle());
            ldate_deb.setText("date debut : " + c.getDate_deb());
            ldate_fin.setText("date fin : " + c.getDate_fin());
            lnbp.setText("nombre de participant : " + c.getNbp());
            ltype.setText("type : " + c.getType());

            f2.show();
        });

        f2.getToolbar().addCommandToLeftBar("back", theme.getImage("back-command.png"),
                ev -> hi.show());
        cn2.setLeadComponent(btn);

        return cn2;*/
     Form baseForm = new BaseForm();
     baseForm.show();

    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

}
